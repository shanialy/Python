from elasticsearch import Elasticsearch, helpers
from datetime import datetime
import os, uuid
try:

    # Password for the 'elastic' user generated by Elasticsearch
    ELASTIC_PASSWORD = "JyjtRAAGBQNH8e6Ex7ftveXK"

    # Found in the 'Manage Deployment' page
    CLOUD_ID = "nothing:dXMtY2VudHJhbDEuZ2NwLmNsb3VkLmVzLmlvJDczNzYzMjg5MDczOTRmZWE4ZDlhNWFmZjE5ZDA1ODQzJDUzZTc3OTdmMmE1MTRlMjY4ZmU0Y2Y5MmY0NTM2NDYy"

    # Create the client instance
    client = Elasticsearch(
        cloud_id=CLOUD_ID,
        basic_auth=("elastic", ELASTIC_PASSWORD)
    )

    # Successful response!
    client.info()
except Exception as e:
    print(e)    

# doc = {
#     'author': 'Ahsan',
#     'text': 'Engineer',
#     'timestamp': datetime.now(),
# }
# resp = client.index(index="test-index", id=2, document=doc)
# print(resp['result'])    

# resp = client.search(index="test-index", query={"match_all": {}})
# print("Got %d Hits:" % resp['hits']['total']['value'])
# for hit in resp['hits']['hits']:
#     print("%(timestamp)s %(author)s: %(text)s" % hit["_source"])
# results = elasticsearch.helpers.scan(client,
#     index="test-index",
#     preserve_order=True,
#     query={"query": {"match_all": {}}},
# )

# for item in results:
#     print(item['_id'], item['_source']['author'])





actions = [
    {
        "_index":"usingbulk",
        # "_type":"doc",
        "_id":doc,
        "_source":{
            "name":"data",
            "timestamp":datetime.now()
        }
    }
    for doc in range(0,10)
]

try:
    # make the bulk call, and get a response
    response = helpers.bulk(client, actions)

    #response = helpers.bulk(elastic, actions, index='employees', doc_type='people')
    print ("\nRESPONSE:", response)
except Exception as e:
    print("\nERROR:", e)





